name: carto_bag
root: ./
startup_window: roscore
pre_window:
  export UAV_NAMESPACE=danieli2 &&
  source custom_config/bag_setup_danieli.sh
windows:
  - roscore:
      layout: tiled
      panes:
        - roscore
        - waitForRos; sleep 5; rosparam set use_sim_time true; rosbag play $BAG_NAME --clock
          $BAG_POINT_TOPIC:=$POINT_TOPIC $BAG_IMU_TOPIC:=$IMU_TOPIC $BAG_TRANSFORM_TOPIC:=$TRANSFORM_TOPIC
          $BAG_CAMERA_ODOM_TOPIC:=$CAMERA_ODOM_TOPIC
          /tf:=/tf_unused /tf_static:=/tf_static_unused
  - slam:
      layout: tiled
      panes:
        - waitForRos; rosparam set use_sim_time true; roslaunch uav_ros_general robot_state_publisher.launch
          urdf:=$CARTO_URDF

        - waitForRos; rosparam set use_sim_time true; roslaunch uav_ros_general cartographer_localization.launch
            simulation:=false
            enable_starter:=$ENABLE_STARTER
            use_fixed_yaw:=$USE_FIXED_YAW
            fixed_yaw:=$FIXED_YAW
            starter_transform:=$TRANSFORM_TOPIC
            starter_odom:=not_connected
            configuration_directory:=$CONFIGURATION_DIRECTORY
            configuration_basename:=$CONFIGURATION_BASENAME
            imu:=$IMU_TOPIC points2:=$POINT_TOPIC
            transform:=$TRANSFORM_TOPIC
            cartographer_state_filename:=$PBSTREAM_NAME

        - waitForRos; rosrun cartographer_ros cartographer_occupancy_grid_node
          __ns:=$UAV_NAMESPACE

        - waitForRos;
          sed "s/PLACEHOLDER_NS/$UAV_NAMESPACE/g" custom_config/display_bag.rviz > custom_config/.display_bag.rviz;
          rosrun rviz rviz -d custom_config/.display_bag.rviz
  - sf:
      layout: tiled
      panes:
        - waitForRos; rosparam set use_sim_time true; roslaunch sensor_fusion sensor_fusion.launch
          config_yaml:=$(realpath custom_config/sensor_client_carto_config.yaml)
  - transform:
      layout: tiled
      panes:
        - waitForRos; waitFor /$UAV_NAMESPACE/es_ekf/odom;
          rosrun topic_tools transform /$UAV_NAMESPACE/es_ekf/odom/pose/pose/orientation /$UAV_NAMESPACE/ekf_euler
          geometry_msgs/Vector3 'tf.transformations.euler_from_quaternion([m.x, m.y, m.z, m.w])' --import tf
        - waitForRos; waitFor /$UAV_NAMESPACE/camera_transformed_pose;
          rosrun topic_tools transform /$UAV_NAMESPACE/camera_transformed_pose/pose/orientation /$UAV_NAMESPACE/camera_euler
          geometry_msgs/Vector3 'tf.transformations.euler_from_quaternion([m.x, m.y, m.z, m.w])' --import tf
        - waitForRos; waitFor /$UAV_NAMESPACE/pozyx_transformed_pose;
          rosrun topic_tools transform /$UAV_NAMESPACE/pozyx_transformed_pose/pose/orientation /$UAV_NAMESPACE/pozyx_euler
          geometry_msgs/Vector3 'tf.transformations.euler_from_quaternion([m.x, m.y, m.z, m.w])' --import tf
        - waitForRos; waitFor /$UAV_NAMESPACE/carto_transformed_pose;
          rosrun topic_tools transform /$UAV_NAMESPACE/carto_transformed_pose/pose/orientation /$UAV_NAMESPACE/carto_euler
          geometry_msgs/Vector3 'tf.transformations.euler_from_quaternion([m.x, m.y, m.z, m.w])' --import tf
  - plot:
      layout: tiled
      panes:
        - waitForRos; waitFor /$UAV_NAMESPACE/ekf_euler;
          sed "s/PLACEHOLDER_NS/$UAV_NAMESPACE/g" custom_config/sf_debug.perspective > custom_config/.sf_debug.perspective;
          rqt --perspective-file custom_config/.sf_debug.perspective
        - waitForRos; waitFor /$UAV_NAMESPACE/ekf_euler; sleep 2;
          ~/.config/i3/layout_manager.sh custom_config/layout-TRIPLE.json
