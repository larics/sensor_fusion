#!/usr/bin/env python
import yaml
import rospkg

# get an instance of RosPack with the default search paths
rospack = rospkg.RosPack()

# list all packages, equivalent to rospack list
rospack.list()

# get the file path for rospy_tutorials
path = rospack.get_path('sensor_fusion')
stream = file(path +'/config/clean_config.yaml', 'r')
params = yaml.load(stream)

PACKAGE = "sensor_fusion"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("Q_acc_x",            double_t,    0, "Process noise acceleration X", params['Q_acc_x'],0,10)
gen.add("Q_acc_y",            double_t,    0, "Process noise acceleration Y", params['Q_acc_y'],0,10)
gen.add("Q_acc_z",            double_t,    0, "Process noise acceleration Z", params['Q_acc_z'],0,10)
gen.add("Q_angular_x",        double_t,    0, "Process noise angular x",      params['Q_angular_x'],0,10)
gen.add("Q_angular_y",       double_t,    0, "Process noise angular y",       params['Q_angular_y'],0,10)
gen.add("Q_angular_z",         double_t,    0, "Process noise angular z",     params['Q_angular_z'],0,10)

gen.add("R_px",            double_t,    0, "Sensor(classic) noise X", 0.9,0,10)
gen.add("R_py",            double_t,    0, "Sensor(classic) noise Y", params['front_R'][1],0,10)
gen.add("R_pz",            double_t,    0, "Sensor(classic) noise Z", params['front_R'][2],0,10)


exit(gen.generate(PACKAGE, "sensor_fusion", "EKF_Q"))